#
# SHAVADOOP Master configuration file
#

#
# SHAVADOOP Master splitter configuration
#
# splitter type (allowed are values are : TEXT, BINARY
splitter.type = TEXT
# estimated or exact bloc size for splitter in bytes for BINARY in number of lines for TEXT
splitter.block_size = 300
# splitter class name
splitter.class = com.tpt.shavadoop.master.split.TextLineSplitter
# number of threads for binary splitter
splitter.nbThreads = 4
# max number of tasks running concurrently per slave
remote.nbtasks = 8

#
# SHAVADOOP ResourceManager parameters
#
#hosts.file = conf/hosts-133
hosts.file = conf/localhost-only

#
# Custom object dedicated to select the next task which could be
# executed regarding the specific constraints of the job 
#
task.selector = com.tpt.shavadoop.master.task.WordCountTaskSelectector

#
# Master monitor server parameters
#
# tcp listen port
monitor.port = 8000
# root directory to store html pages
monitor.root = www
# map monitor root to url
monitor.maproot = /shavadoop
# max number of tasks running concurrently per slave
remote.nbtasks = 4

#
# We assume our SHAVADOOP MASTER is able to manage only one job
# SHAVADOOP Slave properties for job to perform
#

# Define remote slave agent to trigger from master using ssh
slave.prg = ./slave.jar
# mapper used ==>
slave.mapperClass = com.tpt.shavadoop.slave.map.WordCounterMapper
# Shuffler class ==>
#slave.shuffleClass = com.tpt.shavadoop.slave.shuffle.Shuffler
# key reducer used ==>
slave.reducerClass = com.tpt.shavadoop.slave.reduce.WordCounterReducer
# key agregator class
slave.agregator = com.tpt.shavadoop.agregate.Agregator

# data file on which shavadoop will do operations
#data.file = data/data.txt
#data.file = data/magic-oz-extract.txt
data.file = data/OliverTwist.txt

# temporary directory (to store data blocs and intermediate outcomes)
tmp.dir = tmp
